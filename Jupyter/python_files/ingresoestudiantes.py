# -*- coding: utf-8 -*-
"""IngresoEstudiantes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q1oBz0bzINkDCfjDsbWVxDUTXEDnAp3K

Siendo un ejecutivo de la Universidad "Universidad", se quiere identificar los campus que han tenido mayor crecimiento de ingresos en los últimos años, aprender de esos casos de éxito, y averiguar que se podría hacer para incrementar el crecimiento de los campus con menor registro de ingresos.
"""

#Se importan librerias
import xml.etree.ElementTree as ET
import pandas as pd
import matplotlib.pyplot as plt

#Se parsea el xml
tree = ET.parse('historico_ingresos_individuales.xml')
root = tree.getroot()

#Se extraen los datos a lista
data = []
for ingreso in root.findall(".//Ingreso"):
    record = {
        "AlumnoID": ingreso.find("AlumnoID").text,
        "Anio": ingreso.find("Anio").text,
        "Campus": ingreso.find("Campus").text,
        "Programa": ingreso.find("Programa").text,
        "Genero": ingreso.find("Genero").text
    }
    data.append(record)

#Se convierte la lista a df
df = pd.DataFrame(data)

df.info()

df.head()

#Se cuenta cuántos ingresos hay por campus
df['Campus'].value_counts()

#Se agrupa por año y campus para crear gráfica que muestre un historico de ingresos
campus_anio = df.groupby(['Anio', 'Campus']).size().unstack().fillna(0)
campus_anio.plot(kind='line', marker='o', title='Evolución de Ingresos por Campus', figsize=(12,6))
plt.xlabel("Año")
plt.ylabel("Número de Ingresos")
plt.grid(True)

#Se calcula la tasa de ingreso
crecimiento = df.groupby(['Campus', 'Anio']).size().unstack().T.pct_change().mean()
crecimiento.sort_values(ascending=False)

"""Al ver la gráfica de líneas podemos notar que Campus Norte desde el inicio no ha registrado un gran número de ingresos, demostrando poco crecimiento.
Y al ver la tasa de ingreso podemos notar que Campus Este tiene el mayor crecimiento sostenido, lo que demuestra relevancia en los últimos años (después de 2020).
"""

#Se crea un df solo con los registros Este
este_df = df[df['Campus']=='Campus Este']

#Se crea gráfica para visualizar los programas más populares en el campus
proEste = este_df['Programa'].value_counts()
proEste.plot(kind='barh', title='Programas más populares en Campus Este')

#Se crea df solo con registros de Norte y se crea gráfica para visualizar los programas más demandados
norte_df = df[df['Campus']=='Campus Norte']
proNorte = norte_df['Programa'].value_counts()
proNorte.plot(kind='barh', title='Programas más populares en Campus Norte')

"""Ambos campus ofrecen los mismos programas, sin embargo Campus Norte no ha capitalizado en los programas más atractivos en la actualidad (aquellos que son populares en Campus Este).
Para atraer más personas, se podría crear campañas dirigidas para Ingeniería en Sistemas y Medicina en Campus Norte.
"""